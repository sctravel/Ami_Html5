<!doctype html>
<html>
<head>
    <script src="/jquery/dist/jquery.js"></script>
    <script src="/bootstrap/dist/js/bootstrap.min.js"></script>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>Audio Recorder</title>


    <style>
        html { overflow: hidden; }
        body {
            font: 14pt Arial, sans-serif;
            background: "assets/images/background.png";
            display: flex;
            flex-direction: column;
            height: 100vh;
            width: 80%;
            margin: 50 50;
        }
        canvas {
            display: inline-block;
            background: #202020;
            width: 70%;
            height: 35%;
            box-shadow: 0px 0px 10px blue;
        }
        #controls {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-around;
            height: 20%;
            width: 70%;
        }
        #record { height: 15vh; }
        #record.recording {
            background: red;
            background: -webkit-radial-gradient(center, ellipse cover, #ff0000 0%,lightgrey 75%,lightgrey 100%,#7db9e8 100%);
            background: -moz-radial-gradient(center, ellipse cover, #ff0000 0%,lightgrey 75%,lightgrey 100%,#7db9e8 100%);
            background: radial-gradient(center, ellipse cover, #ff0000 0%,lightgrey 75%,lightgrey 100%,#7db9e8 100%);
        }
        #save, #save img { height: 10vh; }
        #save { opacity: 0.25;}
        #save[download] { opacity: 1;}
        #viz {
            height: 70%;
            width: 70%;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            align-items: center;
        }
        @media (orientation: landscape) {
            body { flex-direction: row;}
            #controls { flex-direction: column; height: 100%; width: 10%;}
            #viz { height: 100%; width: 90%;}
        }

    </style>
</head>
<body>
<div class="container">
    <div id="errorReporter" style="padding-bottom: 2%"></div>
    <% include partials/timer.ejs%>
    <div id="viz">
        <canvas id="analyser" width="1024" height="500" style="display: none"></canvas>

        <img id="record" src="images/mic128.png" onclick="toggleRecording(this);">
        <a id="save" href="#"><img src="images/save.svg"></a>
        <div id="button">
            <button id="next" type="button" class="btn btn-primary text-center" onclick="window.location.href='/interview'">Next</button>
        </div>

    </div>
</div>

<script src="/js/messageReporter.js"></script>
<script>

    function audioOrVideoNotEnabled() {
        audioLevel = audioLevelOptions.NoMicrophone;
        var audio = new Audio('/assets/Audio/EnableInterviewAccess.mp3');
        audio.play();
        audio.onended = function() {
            window.location.href='/'
        };
    }

    function testMicPhone(stream) {
        var audio = new Audio('/assets/Audio/items/2000.2.mp3');
        audio.onended = function() {
            var recordButton = document.getElementById("record");
            document.getElementById("analyser").style.display="inline";
            gotStream(stream);
            toggleRecording(recordButton);
            startTimer(0, 10, null, function() {
                toggleRecording(recordButton);
                document.getElementById("analyser").style.display = "none";
                switch(audioLevel) {
                    case audioLevelOptions.OK:
                        var audioOK = new Audio('/assets/Audio/items/2000.2.OK.mp3');
                        audioOK.onended = function () {
                            // window.location.href = "/interview";
                        }
                        audioOK.play();
                        break;
                    case audioLevelOptions.LowVolume:
                        var audioOK = new Audio('/assets/Audio/items/2000.2.Low.mp3');
                        audioOK.onended = function () {
                            // window.location.href = "/interview";
                        }
                        audioOK.play();
                        break;
                    case audioLevelOptions.LowSNR:
                        var audioOK = new Audio('/assets/Audio/items/2000.2.Noise.mp3');
                        audioOK.onended = function () {
                            // window.location.href = "/interview";
                        }
                        audioOK.play();
                        break;
                    default:
                        var audioOK = new Audio('/assets/Audio/items/2000.2.MoreSpeech.mp3');
                        audioOK.onended = function () {
                            // window.location.href = "/interview";
                        }
                        audioOK.play();
                        break;
                }

            })
            //toggleRecording(this);
        };
        audio.play();
    }

    function initAndTestAudio() {
        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;
        if(!navigator.getUserMedia) {
            audioOrVideoNotEnabled();
            return
        }


        if (navigator.getUserMedia) {
            navigator.getUserMedia({audio: true, video: true}, function (stream) {
                testMicPhone(stream);
            }, function (error) {
                audioOrVideoNotEnabled();
            });
        }
    }
    initAndTestAudio();


</script>

</body>
</html>