<style type="text/css">

    svg {
        display: block;
        margin: 50px auto;
    }

    #loader
    { fill: #cccccc }

    #border
    { border-color: #ffffff ;

    }
</style>


<svg id="timer" style="display: none" r="50" width="50" height="50" viewbox="0 0 100 100">

    <path id="border" transform="translate(50, 50)"/>
    <path id="loader" transform="translate(50, 50) scale(.84)"/>
</svg>

<script>
    var timerId = null;
    var timer = document.getElementById('timer')

    function stopTimer() {
        timer.style.display = "none";
        if(timerId !=null) {
            clearTimeout(timerId);
            timerId = null;
        }
    }

    function startTimer(initTimeout, maxTimeout, initTimeoutFunction, maxTimeoutFunction) {
        var radius = 50;
        timer.style.display = "inline";

<<<<<<< HEAD
    function startTimer(timeout, radius, onEndFunction) {
        var timerId = null;
        var timer = document.getElementById('timer');
        var loader = document.getElementById('loader');
        var border = document.getElementById('border');
        var π = Math.PI;
         var α = 0
            , t = timeout/ 2 / 360 * 1000; //draw 1 degree every t milli-seconds
=======
        var loader = document.getElementById('loader')
        var border = document.getElementById('border')
        var π = Math.PI
        var α = 0
            , t = maxTimeout/ 2 / 360 * 1000; //draw 1 degree every t milli-seconds
        var initA = initTimeout/maxTimeout*360;
        var initExecuted = false;
>>>>>>> c917b35a4c0981b30aab1be9890c0ea53db36e36

        (function draw() {
            α++;
            if(initTimeout>0 && α > initA && !initExecuted) {
                initTimeoutFunction();
                initExecuted = true;
            }
            if (α > 360) {
                if(timerId!=null) {
                    clearTimeout(timerId);
                    timerId = null;
                }
                maxTimeoutFunction();
                return;
            }
            //α %= 360;
            var r = ( α * π / 180 )
                , x = Math.sin(r) * radius
                , y = Math.cos(r) * -radius
                , mid = ( α > 180 ) ? 1 : 0
                , anim = 'M 0 0 v -'+radius+' A '+radius+' '+radius+' 1 '
                + mid + ' 1 '
                + x + ' '
                + y + ' z';
            //[x,y].forEach(function( d ){
            //  d = Math.round( d * 1e3 ) / 1e3;
            //});

            loader.setAttribute('d', anim);
            border.setAttribute('d', anim);

            timerId = setTimeout(draw, t); // Redraw
        })();
    }
</script>